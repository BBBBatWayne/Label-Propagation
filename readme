Author: Akshay Bhat
Web: www.akshaybhat.com


Contents:
LP.py 
Description: Label Propagation algorithm implemented in python using multiprocessing module



LPmem.py
[ Note that this program is still not ready since it does not randomizes the order of the nodes while performing label propagation]

Description: A modified version of Label Propagation algorithm implemented in python using multiprocessing module which stores only the Label array in memmory. Should be used for massive networks with more than few million nodes.


ParseWiki.py 
A small script parse the wikipedia link dataset file into two different formats used by LP and LPmem.









Algorithm:

Label Propagation Algorithm:

As described in paper 

Near linear time algorithm to detect community structures in large-scale networks

Usha Nandini Raghavan1, Réka Albert2, and Soundar Kumara1 

1Department of Industrial Engineering, The Pennsylvania State University, University Park, Pennsylvania 16802, USA
2Department of Physics, The Pennsylvania State University, University Park, Pennsylvania 16802, USA


Community detection and analysis is an important methodology for understanding the organization of various real-world networks and has applications in problems as diverse as consensus formation in social communities or the identification of functional modules in biochemical networks. Currently used algorithms that identify the community structures in large-scale real-world networks require a priori information such as the number and sizes of communities or are computationally expensive. In this paper we investigate a simple label propagation algorithm that uses the network structure alone as its guide and requires neither optimization of a predefined objective function nor prior information about the communities. In our algorithm every node is initialized with a unique label and at every step each node adopts the label that most of its neighbors currently have. In this iterative process densely connected groups of nodes form a consensus on a unique label to form communities. We validate the algorithm by applying it to networks whose community structures are known. We also demonstrate that the algorithm takes an almost linear time and hence it is computationally less expensive than what was possible so far.
© 2007 The American Physical Society

URL:	http://link.aps.org/doi/10.1103/PhysRevE.76.036106
DOI:	10.1103/PhysRevE.76.036106
PACS:	 89.75.Fb, 89.75.Hc, 87.23.Ge, 02.10.Ox


License: Research Only

